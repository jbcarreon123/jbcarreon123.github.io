---
import GitHubProjects from "../components/GitHubProjects.svelte";
import Layout from "../layouts/Layout.astro";

async function loadRepos() {
    let repoResponse = await fetch(
        `https://api.github.com/users/jbcarreon123/repos?per_page=100`,
    );

    if (!repoResponse.ok)
        throw new Error(
            `Recieved ${repoResponse.status} from GitHub. Please try again later.`,
        );

    let repos: any[] = await repoResponse.json();
    repos = repos.concat(await loadReposWithFilter());

    repos.sort(function (a, b) {
        return new Date(b.pushed_at) - new Date(a.pushed_at);
    });

    return repos;
}

async function loadReposWithFilter() {
    let repoResponse = await fetch(
        `https://api.github.com/users/indiefellas/repos`,
    );
    let repos: any[] = await repoResponse.json();

    let indiefellas = [
        "astro-adapter-nekoweb",
        "svelte-adapter-nekoweb",
        "inaccessible",
        "nekoweb-api",
        "jAPI",
        "neko",
        "nkko",
        "nekobox",
        "Nekomment"
    ];

    repos = repos.filter((v) => indiefellas.includes(v.name));

    let repo2Response = await fetch(
        `https://api.github.com/users/Macro-Deck-App/repos`,
    );
    let repos2: any[] = await repo2Response.json();

    let macroDeck = ["Macro-Bot"];

    repos2 = repos2.filter((v) => macroDeck.includes(v.name));
    repos = repos.concat(repos2);

    repos = repos.concat(
        await (
            await fetch(`https://api.github.com/users/liberation-dev/repos`)
        ).json(),
    );
    repos = repos.concat(
        await (await fetch(`https://api.github.com/users/Y2DL/repos`)).json(),
    );
    repos = repos.concat(
        await (
            await fetch(`https://api.github.com/users/customWin/repos`)
        ).json(),
    );

    return repos;
}

let repos: any[];
try {
    repos = await loadRepos();
    repos.concat(await loadReposWithFilter());
} catch {
    repos = [];
}

function getStars(name: string): number {
    return repos.filter((s) => name.toLowerCase().includes(s.name.toLowerCase()))[0]?.stargazers_count ?? 0;
}

let r = [
    "nekobox",
    "nkko",
    "nekoweb-api",
    "jplayer2",
    ".github",
    "baduibattles-mysubmissions",
    "gh.jbc.lol",
    "jbsite3",
    "jbs-website",
    "jbsite5",
    "nekomment"
]

let f = repos.filter((s) => !r.includes(s.name.toLowerCase()) && !s.fork && s.description);
---

<Layout
    title="jb's projects"
    description="some projects that jb did"
    id="projects"
>
    <h1>My Projects</h1>
    <h2>Main projects (owned or contributed)</h2>
    <div class="proj">
        <a href="https://beta.cmt.nkko.link/" target="_blank">
            <div>
                <div>
                    <h3>Nekomment</h3>
                    <p>A dynamic comments system.</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("nekomment")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/nekomment.png" />
        </a>
        <a href="https://nekobox.nekoweb.org/" target="_blank">
            <div>
                <div>
                    <h3>Nekobox2</h3>
                    <p>A Nekoweb elements.css viewer and editor</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("nekobox2")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/nekobox.png" />
        </a>
        <a href="https://nkko.link/" target="_blank">
            <div>
                <div>
                    <h3>nkko.link</h3>
                    <p>Basically currently a link shortener.</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("nkko")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/nkkolink.png" />
        </a>
        <a href="https://github.com/jbcarreon123/jPlayer2/" target="_blank">
            <div>
                <div>
                    <h3>jPlayer2</h3>
                    <p>A modern web player, powered by Web Components API</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("jplayer2")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/jplayer2.png" />
        </a>
        <a href="https://github.com/indiefellas/nekoweb-api" target="_blank">
            <div>
                <div>
                    <h3>nekoweb-api</h3>
                    <p>A wrapper for the Nekoweb API</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("nekoweb-api")}</p>
            </div>
        </a>
    </div>
    <h2>jb's site</h2>
    <div class="proj">
        <a href="https://github.com/jbcarreon123/jbsite5" target="_blank">
            <div>
                <div>
                    <h3>jbSite5</h3>
                    <p>The next version, honestly I might actually not use this</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("jbsite5")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/jbsite5.png" />
        </a>
        <a href="/">
            <div>
                <div>
                    <h3>jbSite4</h3>
                    <p>This site</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("gh.jbc.lol")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/jbsite4.png" />
        </a>
        <a href="https://v3.jbc.lol" target="_blank">
            <div>
                <div>
                    <h3>jbSite3</h3>
                    <p>The last version, written in SvelteKit</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("jbsite3")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/jbsite3.png" />
        </a>
        <a href="https://v1.jbc.lol" target="_blank">
            <div>
                <div>
                    <h3>jbSite1</h3>
                    <p>The site that started it all</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{getStars("jbs-website")}</p>
            </div>
            <img class="bg" loading="lazy" decoding="async" aria-hidden="true" alt="" src="/imgs/projs/jbsite1.png" />
        </a>
    </div>
    <h2>Other projects</h2>
    <div class="proj">
        {f.map((l) => <a href={l.html_url} target="_blank">
            <div>
                <div>
                    <h3>{l.name}</h3>
                    <p>{l.description}</p>
                </div>
                <p><span class="ms" data-icon="star" aria-hidden="true"></span>{l.stargazers_count}</p>
            </div>
        </a>)}
    </div>

    <style is:inline slot="head">
        .proj {
            display: grid;
            grid-template-columns: repeat(2, minmax(100px, 1fr));
            gap: 12px;

            & > a {
                background-color: var(--acc);
                vertical-align: bottom;
                min-height: 150px;
                position: relative;
                color: color-mix(in srgb, var(--link) 50%, var(--text)) !important;
                text-decoration: none !important;

                & > .bg {
                    position: absolute;
                    top: 0;
                    left: 0;
                    min-width: 100%;
                    height: 100%;
                    max-width: 100%;
                    border: none;
                    opacity: 0.5;
                    z-index: 0;
                    object-fit: cover;
                }

                & > div {
                    background: linear-gradient(to top, color-mix(in srgb, var(--altbg) 65%, transparent), transparent);
                    padding: 6px;
                    display: flex;
                    align-items: end;
                    height: 100%;
                    z-index: 1;
                    position: relative;
                    justify-content: space-between;

                    & * {
                        padding: 0;
                    }

                    &>div {
                        position: relative;
                        height: 100%;
                        display: flex;
                        justify-content: space-between;
                        flex-direction: column-reverse;
                        gap: 12px;
                        width: 100%;
                        &>p {
                            opacity: 0;
                        }
                    }

                    &>p {
                        padding-right: 3px;
                        width: fit-content;
                        text-wrap-mode: nowrap;
                    }
                }

                &:not(:has(.bg)) {
                    div {
                        p {
                            opacity: 1;
                        }
                    }

                    background: var(--acc);

                    &:hover, &:active, &:focus-within {
                        background: var(--altbg);
                    }
                }

                &:has(.bg):hover, &:has(.bg):active, &:has(.bg):focus-within {
                    background: linear-gradient(to bottom, var(--bg), transparent);

                    &>.bg {
                        opacity: 0.25;
                    }

                    &>div {
                        &>div {
                            &>p {
                                opacity: 1;
                            }
                        }
                    }
                }
            }
        }

        @media screen and (width <= 640px) {
            .proj {
                grid-template-columns: repeat(1, 100%);
            }
        }

        h3 {
            font-size: 1.5em;
        }

        h2 {
            font-size: 1.75em;
            padding: 0;
            margin: 0;
            padding-bottom: 6px;
            padding-top: 30px !important;
        }
    </style>
</Layout>
