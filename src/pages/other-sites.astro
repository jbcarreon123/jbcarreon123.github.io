---
import Layout from '../layouts/Layout.astro';
import Buttons from '../../public/buttons.json';

let buttons = Buttons
    .filter((btn) => !btn.imgUrl.startsWith('/imgs'))
    .map((btn) => {
        let url = new URL(btn.imgUrl)
        let spl = url.pathname.split('/')
        let ext = spl[spl.length - 1]
        let nme = url.hostname.replace('www', '').split('.')[0]

        return { 
            ...btn,
            slug: `/imgs/site-buttons/${nme}-${ext}/`,
            prv: `/imgs/site-prv/${(new URL(btn.url)).hostname}.png/`
        }
    });

let nonbtns = Buttons
    .filter((btn) => btn.imgUrl.startsWith('/imgs'))
	.map((btn) => ({
		...btn,
		slug: btn.imgUrl,
        prv: `/imgs/site-prv/${(new URL(btn.url)).hostname}.png/`
	}))

buttons = buttons.concat(nonbtns)
---

<Layout title="Other sites" id="other-sites" description="Pages of other people's sites">
    <h1>Other sites</h1>
    <div class="sites">
        {
            buttons.sort((a, b) => 
                a.alt.localeCompare(b.alt)
            ).map((btn) => <a href={btn.url} target="_blank">
                <div>
                    <div>
                        <div class="lh">
                            <img src={btn.slug} alt={btn.title} />
                            <h3>{btn.alt}</h3>
                        </div>
                        <p>{btn.title}</p>
                    </div>
                </div>
                <img class="bg" aria-hidden="true" alt="" src={btn.prv} />
            </a>)
        }
    </div>
    <style is:global slot="head">
        .sites {
            display: grid;
            grid-template-columns: repeat(2, minmax(100px, 1fr));
            gap: 12px;

            & > a {
                background-color: var(--acc);
                vertical-align: bottom;
                min-height: 150px;
                position: relative;
                color: color-mix(in srgb, var(--link) 50%, var(--text)) !important;
                text-decoration: none !important;

                .lh {
                    display: flex;
                    flex-direction: row;
                    align-items: end;

                    img {
                        width: 0px;
                        visibility: hidden;
                        height: 31px;
                        object-fit: contain;
                        object-position: bottom;
                    }
                }

                &:hover .lh {
                    img {
                        width: 94px;
                        visibility: visible;
                    }
                }

                & > .bg {
                    position: absolute;
                    top: 0;
                    left: 0;
                    min-width: 100%;
                    height: 100%;
                    max-width: 100%;
                    border: none;
                    opacity: 0.5;
                    z-index: 0;
                    object-fit: cover;
                }

                & > div {
                    background: linear-gradient(to top, color-mix(in srgb, var(--altbg) 65%, transparent), transparent);
                    padding: 6px;
                    display: flex;
                    align-items: end;
                    height: 100%;
                    z-index: 1;
                    position: relative;
                    justify-content: space-between;

                    & * {
                        padding: 0;
                    }

                    &>div {
                        position: relative;
                        height: 100%;
                        display: flex;
                        justify-content: space-between;
                        flex-direction: column-reverse;
                        gap: 12px;
                        width: 100%;
                        &>p {
                            opacity: 0;
                        }
                    }

                    &>p {
                        padding-right: 3px;
                        width: fit-content;
                        text-wrap-mode: nowrap;
                    }
                }

                &:not(:has(.bg)) {
                    div {
                        p {
                            opacity: 1;
                        }
                    }

                    background: var(--acc);

                    &:hover, &:active, &:focus-within {
                        background: var(--altbg);
                    }
                }

                &:has(.bg):hover, &:has(.bg):active, &:has(.bg):focus-within {
                    background: linear-gradient(to bottom, var(--bg), transparent);

                    &>.bg {
                        opacity: 0.25;
                    }

                    &>div {
                        &>div {
                            &>p {
                                opacity: 1;
                            }
                        }
                    }
                }
            }
        }

        @media screen and (width <= 640px) {
            .sites {
                grid-template-columns: repeat(1, 100%);
            }
        }
    </style>
</Layout>