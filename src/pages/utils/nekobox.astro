---
import Layout from "../../layouts/Layout.astro";

import "prism-code-editor/search.css";
import "prism-code-editor/invisibles.css";
---

<Layout
    title="Nekobox"
    description="The one stop shop for editing and previewing Nekoweb boxes."
    id="nekobox"
>
    <script>
        import { basicEditor } from "prism-code-editor/setups";
        import {
            searchWidget,
            highlightSelectionMatches,
            highlightCurrentWord,
            showInvisibles,
        } from "prism-code-editor/search";
        import {
            registerCompletions,
            autoComplete,
            fuzzyFilter,
            completeSnippets,
        } from "prism-code-editor/autocomplete";
        import { cssCompletion } from "prism-code-editor/autocomplete/css";
        import "prism-code-editor/prism/languages/markup";
        import "prism-code-editor/prism/languages/css";
        import { minify } from "csso";
        import cssbeautify from "cssbeautify";
        import Parser from "rss-parser";

        var url = window.location;
        let params = new URLSearchParams(url.search);
        if (params.has("load")) {
            loadUrl(decodeURIComponent(params.get("load") ?? ""));
        } else if (params.has("username")) {
            loadUrl(
                `https://${params.get("username")}.nekoweb.org/%2F/elements.css?original=1`,
            );
        }

        let s =
            localStorage.getItem("nekobox:value") ??
            document
                .querySelector("#user-style")
                ?.innerHTML.trim()
                .replaceAll("        ", "") ??
            "";

        (document.querySelector(`input[type="text"]#username`) as any).value =
            localStorage.getItem("nekobox:username") ?? "jbcarreon123";
        (document.querySelector('input[type="text"]#domain') as any).value =
            localStorage.getItem("nekobox:domain") ?? "";
            (document.querySelector('input[type="text"]#rss') as any).value =
            localStorage.getItem("nekobox:rss") ?? "";
        (
            document.querySelector('input[type="checkbox"]#overflow') as any
        ).checked = localStorage.getItem("nekobox:overflow") === "true";
        (document.querySelector("#nkb-readonly") as any).style.display =
            localStorage.getItem("nekobox:readonly") === "true"
                ? "block"
                : "none";

        const editor = basicEditor(
            "#nekobox-editor",
            {
                language: "css",
                theme: "github-dark",
                value: s,
                readOnly: localStorage.getItem("nekobox:readonly") === "true",
            },
            () => {
                document.querySelector("#user-style").innerHTML =
                    replaceInvalidCSS(s);
                lint(s);
                document.querySelector("textarea#nb-validate-textarea").value =
                    s;
            },
        );

        registerCompletions(["css"], {
            sources: [cssCompletion()],
        });

        editor.addExtensions(
            highlightSelectionMatches(),
            searchWidget(),
            highlightCurrentWord(),
            showInvisibles(),
            // autoComplete({
            //     filter: fuzzyFilter,
            // }),
        );

        editor.addListener("update", (value) => {
            document.querySelector("#user-style").innerHTML = replaceInvalidCSS(
                value.replaceAll(/\n.follow ?{/gm, "\n.no {"),
            );
            document.querySelector("#cssSize").innerHTML =
                `${textToKilobytes(value)}KB used (${textToKilobytes(minifyCSS(value))}KB when minified)`;

            localStorage.setItem("nekobox:value", value);
            lint(value);
            document.querySelector("textarea#nb-validate-textarea").value =
                value;
        });

        function lint(css: string) {
            let lines: {
                line: number;
                entry: string;
                reason: 'selector' | 'link';
            }[] = [];
            const regex = /^(?!\.site-box|\.follow|\.post-box).*{/gm;
            const linkRegex = /^.+url\(((?!(?:https?:)?\/\/([a-z0-9A-Z]+\.)?nekoweb\.org).+)\);?/gm;
            let clines = css.split("\n");
            clines.forEach((s, i) => {
                if (regex.test(s)) {
                    if (/{ ?$/.test(s)) {
                        lines.push({
                            line: i + 1,
                            entry: s.match(regex)[0],
                            reason: 'selector'
                        });
                    }
                } else if (linkRegex.test(s)) {
                    lines.push({
                        line: i + 1,
                        entry: s.replace(linkRegex, '$1'),
                        reason: 'link'
                    })
                }
            });
            if (lines.length > 0) {
                document.querySelector("#nb-errors div").innerHTML = lines
                    .map((v) => {
                        switch (v.reason) {
                            case 'link':
                            return `<p>(${v.line}) URL not allowed: ${v.entry}. Nekoweb elements.css does not support anything beyond [sitename].nekoweb.org.</p>`
                            default:
                            if (v.entry.startsWith("@")) {
                                return `<p>(${v.line}) Unrecognized selector: ${v.entry.replace(/ { ?$/, "")}. Nekoweb does not support @at-rules as of now.</p>`;
                            } else {
                                return `<p>(${v.line}) Unrecognized selector: ${v.entry.replace(/ { ?$/, "")}. Please make sure that every entry on the elements.css starts with '.site-box' for the sitebox and '.post-box' for the postbox.</p>`;
                            }
                        }
                    })
                    .join("");
            } else {
                document.querySelector("#nb-errors div").innerHTML =
                    `<p>No errors found for now.</p>`;
            }
            document.querySelector("#nb-error-btn").innerHTML =
                `Errors (${lines.length})`;
        }

        function textToKilobytes(text: string) {
            const encoder = new TextEncoder();
            const bytes = encoder.encode(text).length;
            const kilobytes = bytes / 1024;
            return kilobytes.toFixed(2);
        }

        function replaceInvalidCSS(cssString: string | null | undefined) {
            if (!cssString) return "";
            const regex = /^(?!\.site-box|\.follow|\.post-box).*{/gm;
            const linkRegex = /(^.+url\()((?!(?:https?:)?\/\/([a-z0-9A-Z]+\.)?nekoweb\.org).+)(\);?)/gm;
            return cssString.replace(
                regex,
                "/* This will not work in Nekoweb, unfortunately. */\n#WILL-NOT-WORK {",
            ).replace(linkRegex, '$1);');
        }

        function minifyCSS(css: string): string {
            try {
                return minify(css, {
                    restructure: false,
                }).css;
            } catch (error) {
                console.error("Error minifying CSS:", error);
                return css;
            }
        }

        function unMinifyCss(css: string) {
            try {
                return cssbeautify(css);
            } catch (error) {
                console.error("Error minifying CSS:", error);
                return css;
            }
        }

        interface Metadata {
            username: string;
            domain?: string;
            overflow: boolean;
            rss?: string;
            readonly readonly: boolean;
        }

        function loadMetadata(
            css: string,
        ): { data: Metadata; css: string } | null {
            const regex = /^\/\*!@nkb (.+) \*\/(?:\n?.*)*/dgimsvy;
            const excludeRegex = /^\/\*!@nkb .+ \*\/\n?/dgimsvy;
            try {
                return {
                    data: JSON.parse(css.replace(regex, "{$1}")),
                    css: unMinifyCss(css.replace(excludeRegex, "")),
                };
            } catch {
                return null;
            }
        }

        function exportMetadata(metadata: Metadata): string {
            const regex = /{(.+)}/;
            const data = JSON.stringify(metadata);
            return data.replace(regex, "/*!@nkb $1 */");
        }

        function copy(el: Element, isMinified = false) {
            let metadata: Metadata = {
                username: (
                    document.querySelector(`input[type="text"]#username`) as any
                ).value,
                domain: (
                    document.querySelector('input[type="text"]#domain') as any
                ).value,
                rss: (document.querySelector('input[type="text"]#rss') as any)
                    .value,
                overflow: (
                    document.querySelector(
                        'input[type="checkbox"]#overflow',
                    ) as any
                ).checked,
                readonly: (
                    document.querySelector(
                        'input[type="checkbox"]#readonly',
                    ) as any
                ).checked,
            };

            let val = `${exportMetadata(metadata)}
${editor.value}`;

            if (isMinified) {
                val = minifyCSS(val);
            }

            navigator.clipboard.writeText(val).then();
            let o = el.textContent;
            el.textContent = "Copied!";
            setTimeout(() => (el.textContent = o), 2000);
        }

        function getNekowebUsernameFromCSS(css: string, alt = "") {
            let regex = /(\/\/.+\.nekoweb.org)/gm;
            let res = regex.exec(css);
            if (res !== null) {
                for (let i = 0; i < res.length; i++) {
                    if (res[i] === "//example.nekoweb.org") continue;
                    return res[i].replace("//", "").split(".")[0];
                }
            }

            regex = /\/\/nekoweb\.org\/site\/([A-Za-z0-9\-\_]+)/gm;
            res = regex.exec(css);
            if (res !== null) {
                for (let i = 0; i < res.length; i++) {
                    if (res[i] === "//nekoweb.org/site/example") continue;
                    return res[i].replace("//nekoweb.org/site/", "");
                }
            }

            return alt;
        }

        async function load() {
            let url = prompt("elements.css path?");
            if (url) {
                try {
                    let res = await fetch(url);
                    if (res.ok) {
                        let css = await res.text();
                        let m = loadMetadata(css);
                        if (m) {
                            localStorage.setItem("nekobox:value", m.css);
                            localStorage.setItem(
                                "nekobox:username",
                                m.data.username,
                            );
                            localStorage.setItem(
                                "nekobox:domain",
                                m.data.domain ?? "",
                            );
                            localStorage.setItem(
                                "nekobox:overflow",
                                `${m.data.overflow}`,
                            );
                            localStorage.setItem(
                                "nekobox:readonly",
                                `${m.data.readonly}`,
                            );
                            localStorage.setItem(
                                "nekobox:rss",
                                `${m.data.rss}`,
                            );
                            alert(
                                `Loaded, reloading...\n\nLoaded from Nekobox Metadata Format`,
                            );
                        } else {
                            let u = url
                                .replace(/https?:\/\//, "")
                                .split(".")[0];
                            alert(
                                `Loaded, reloading...\n\nUsername: ${!url.includes("nekoweb.org") ? getNekowebUsernameFromCSS(css, u) : u}\nDomain: ${!url.includes("nekoweb.org") ? new URL(url).hostname : u + ".nekoweb.org"}`,
                            );
                            localStorage.setItem(
                                "nekobox:value",
                                unMinifyCss(css),
                            );
                            localStorage.setItem(
                                "nekobox:username",
                                !url.includes("nekoweb.org")
                                    ? getNekowebUsernameFromCSS(css, u)
                                    : u,
                            );
                            localStorage.setItem(
                                "nekobox:domain",
                                !url.includes("nekoweb.org")
                                    ? new URL(url).hostname
                                    : "",
                            );
                            localStorage.setItem(
                                "nekobox:overflow",
                                `${!url.includes("nekoweb.org")}`,
                            );
                            localStorage.setItem("nekobox:readonly", `false`);
                            localStorage.setItem("nekobox:rss", ``);
                        }

                        window.location.reload();
                    } else {
                        alert(
                            `Server returned ${res.status} (${res.statusText})`,
                        );
                    }
                } catch (e) {
                    alert(`Can't fetch: ${e}`);
                }
            }
        }

        async function loadUrl(url: string) {
            if (url) {
                try {
                    let res = await fetch(url);
                    if (res.ok) {
                        let css = await res.text();
                        let m = loadMetadata(css);
                        if (m) {
                            localStorage.setItem("nekobox:value", m.css);
                            localStorage.setItem(
                                "nekobox:username",
                                m.data.username,
                            );
                            localStorage.setItem(
                                "nekobox:domain",
                                m.data.domain ?? "",
                            );
                            localStorage.setItem(
                                "nekobox:overflow",
                                `${m.data.overflow}`,
                            );
                            localStorage.setItem(
                                "nekobox:readonly",
                                `${m.data.readonly}`,
                            );
                            localStorage.setItem(
                                "nekobox:rss",
                                `${m.data.rss}`,
                            );
                        } else {
                            let u = url
                                .replace(/https?:\/\//, "")
                                .split(".")[0];
                            localStorage.setItem(
                                "nekobox:value",
                                unMinifyCss(css),
                            );
                            localStorage.setItem(
                                "nekobox:username",
                                !url.includes("nekoweb.org")
                                    ? getNekowebUsernameFromCSS(css, u)
                                    : u,
                            );
                            localStorage.setItem(
                                "nekobox:domain",
                                !url.includes("nekoweb.org")
                                    ? new URL(url).hostname
                                    : "",
                            );
                            localStorage.setItem(
                                "nekobox:overflow",
                                `${!url.includes("nekoweb.org")}`,
                            );
                            localStorage.setItem("nekobox:readonly", `false`);
                            localStorage.setItem("nekobox:rss", ``);
                        }
                        window.location.search = "";
                    } else {
                        alert(
                            `Server returned ${res.status} (${res.statusText})`,
                        );
                    }
                } catch (e) {
                    alert(`Can't fetch: ${e}`);
                }
            }
        }

        let timeout = 0;
        let rssItems: ({
            [key: string]: any;
        } & Parser.Item)[] = [];
        let rssOld = "";
        let userOld = "";

        /** @param {HTMLFormElement} el  */
        async function fChange(el) {
            let overflow = el.querySelector(
                'input[type="checkbox"]#overflow',
            ).checked;

            let presite = document.querySelector(".pre-site") as HTMLDivElement;
            let prepost = document.querySelector(".pre-post") as HTMLDivElement;
            if (!overflow) {
                presite.style.overflow = "hidden";
                prepost.style.overflow = "hidden";
            } else {
                presite.style.removeProperty("overflow");
                prepost.style.removeProperty("overflow");
            }

            let username = el.querySelector(
                `input[type="text"]#username`,
            ).value;
            let domain = el.querySelector('input[type="text"]#domain').value;
            let rss = el.querySelector('input[type="text"]#rss').value;

            localStorage.setItem("nekobox:overflow", overflow);
            localStorage.setItem("nekobox:domain", domain ?? "");
            if (domain) {
                document.querySelector("#NOTUSEDINNEKOWEB_url").href =
                    "//" + domain;
                document.querySelector("#NOTUSEDINNEKOWEB_posturl").href =
                    "//" + domain;
                document.querySelector("#NOTUSEDINNEKOWEB_posturl").href =
                    "//" + domain;
                document.querySelector(
                    "#NOTUSEDINNEKOWEB_siteurl",
                ).textContent = `${domain}`;
            }

            clearTimeout(timeout);
            timeout = setTimeout(async () => {
                if (username !== userOld) {
                    userOld = username;
                    let res = await fetch(
                        "https://nekoweb.org/api/site/info/" + username,
                    );
                    if (!res.ok) {
                        if (domain) {
                            let val = el.querySelector(
                                'input[type="text"]#domain',
                            ).value;
                            let u = val.split(".")[0];
                            res = await fetch(
                                "https://nekoweb.org/api/site/info/" + u,
                            );
                            if (!res.ok) {
                                if (res.status === 404)
                                    alert(
                                        "Nekoweb username " +
                                            username +
                                            " not found.",
                                    );
                                else
                                    alert(
                                        "Nekoweb sent status code " +
                                            res.status +
                                            ". Please try again later.",
                                    );
                            } else {
                                username = u;
                                el.querySelector(
                                    `input[type="text"]#username`,
                                ).value = u;
                            }
                        }
                    } else {
                        localStorage.setItem("nekobox:username", username);

                        let json = await res.json();
                        document.querySelector("#NOTUSEDINNEKOWEB_url").href =
                            domain
                                ? "//" + domain
                                : `//${username}.nekoweb.org/`;
                        document.querySelector(
                            "#NOTUSEDINNEKOWEB_posturl",
                        ).href = domain
                            ? "//" + domain
                            : `//${username}.nekoweb.org/`;
                        document.querySelector(
                            "#NOTUSEDINNEKOWEB_screenshot",
                        ).src =
                            `//nekoweb.org/screenshots/${username}/index_large.jpg`;
                        document.querySelector(
                            "#NOTUSEDINNEKOWEB_siteurl",
                        ).textContent = domain
                            ? `${domain}`
                            : `${username}.nekoweb.org`;
                        document.querySelector(
                            "#NOTUSEDINNEKOWEB_sitetitle",
                        ).textContent = json.title;
                        document.querySelector(
                            "#NOTUSEDINNEKOWEB_siteusername",
                        ).textContent = username;
                    }
                }

                if (rss && rssOld !== rss) {
                    let f = await fetch(rss);
                    rssOld = rss;
                    if (f.ok) {
                        let p = new Parser();
                        p.parseString(await f.text(), (error, feed) => {
                            let frs = feed.items[0];
                            rssItems = feed.items;
                            document.querySelector(
                                "#NOTUSEDINNEKOWEB_feeddate",
                            ).textContent = new Date(
                                frs.isoDate,
                            ).toLocaleDateString(undefined, {
                                day: "numeric",
                                month: "numeric",
                                year: "numeric",
                            });
                            document.querySelector(
                                "#NOTUSEDINNEKOWEB_feedtitle",
                            ).textContent = frs.title;
                            document.querySelector(
                                "#NOTUSEDINNEKOWEB_feeddesc",
                            ).textContent = frs.content;
                            document.querySelector(
                                "#NOTUSEDINNEKOWEB_posturl",
                            ).href = frs.link;

                            let rssopt = document.querySelector(
                                ".nb-form #rsspost",
                            ) as HTMLSelectElement;
                            rssopt.innerHTML = feed.items
                                .map(
                                    (v, i) =>
                                        `<option value="${i}">${v.title}</option>`,
                                )
                                .join("");
                            rssopt.value = "0";
                        });
                    }
                }

                localStorage.setItem("nekobox:rss", rss ?? "");
            }, 1000);

            let rssopt = document.querySelector(
                ".nb-form #rsspost",
            ) as HTMLSelectElement;
            let val = Number(rssopt.value);
            let frs = rssItems[val];
            if (frs) {
                document.querySelector(
                    "#NOTUSEDINNEKOWEB_feeddate",
                ).textContent = new Date(frs.isoDate).toLocaleDateString(
                    undefined,
                    {
                        day: "numeric",
                        month: "numeric",
                        year: "numeric",
                    },
                );
                document.querySelector(
                    "#NOTUSEDINNEKOWEB_feedtitle",
                ).textContent = frs.title;
                document.querySelector(
                    "#NOTUSEDINNEKOWEB_feeddesc",
                ).textContent = frs.content;
                document.querySelector("#NOTUSEDINNEKOWEB_posturl").href =
                    frs.link;
            }
        }

        let form = document.querySelector("form.nb-form") as HTMLFormElement;
        form?.addEventListener("change", () => fChange(form));

        let cp = document.querySelector("#copy");
        let cpMin = document.querySelector("#copyMin");
        let sv = document.querySelector("#load");
        cp?.addEventListener("click", () => copy(cp));
        cpMin?.addEventListener("click", () => copy(cpMin, true));
        sv?.addEventListener("click", async () => await load());

        document.addEventListener("astro:page-load", () => {
            let form = document.querySelector("form.nb-form");
            setTimeout(() => fChange(form), 250);

            let follow = document.querySelector(".follow");
            follow.addEventListener("click", (ev) => {
                ev.preventDefault();
                follow.classList.toggle("following");
                if (follow.classList.contains("following")) {
                    follow.textContent = "[-]";
                    follow.title = "Unfollow";
                } else {
                    follow.textContent = "[+]";
                    follow.title = "Follow";
                }
            });
        });
    </script>

    <script is:inline>
        function switchTab(el) {
            document
                .querySelectorAll("#tab-buttons button")
                .forEach((el) => el.classList.remove("active"));
            document
                .querySelectorAll("#nekobox-tabs > div")
                .forEach((el) => el.classList.remove("visible"));
            document
                .querySelector(`#nekobox-tabs #${el.dataset.target}`)
                ?.classList.add("visible");
            el.classList.add("active");
        }
    </script>

    <h1>Nekobox</h1>
    <p class="mg">
        The one stop shop for editing and previewing Nekoweb boxes.
    </p>
    <p>
        If you need help, join <a href="https://discord.gg/vB3FFZytCy" target="_blank">the Nekoweb Discord</a>
        and ask on #coding-help or #webdev!!
    </p>

    <div id="nekobox-tab-container">
        <div id="tab-buttons">
            <button
                onclick="switchTab(this)"
                data-target="nb-sitebox"
                class="active">Sitebox</button
            >
            <button onclick="switchTab(this)" data-target="nb-postbox"
                >Postbox</button
            >
            <button
                onclick="switchTab(this)"
                id="nb-error-btn"
                data-target="nb-errors">Errors (0)</button
            >
            <button onclick="switchTab(this)" data-target="nb-options"
                >Settings</button
            >
        </div>
        <div id="nekobox-tabs" class="nekoweb-colors">
            <div id="nb-sitebox" class="visible">
                <div class="pre-pre-site nekoweb-colors">
                    <div class="pre-site" style="">
                        <div
                            id="site"
                            class="noreset site-box t-classic"
                            style="width:275px!important;height:190px!important;position:relative!important"
                        >
                            <span class="noreset top-dot"></span>
                            <a
                                href="//jbcarreon123.nekoweb.org/"
                                target="_blank"
                                id="NOTUSEDINNEKOWEB_url"
                                rel="noopener ugc"
                                style="position:relative!important"
                            >
                                <div
                                    class="noreset sitefeature"
                                    style="position:relative!important"
                                >
                                    <img
                                        src="//nekoweb.org/screenshots/jbcarreon123/index_large.jpg"
                                        class="screenshot"
                                        id="NOTUSEDINNEKOWEB_screenshot"
                                        style="position:relative!important"
                                    />
                                </div>
                                <p
                                    class="noreset"
                                    style="position:relative!important"
                                >
                                    <span id="NOTUSEDINNEKOWEB_siteurl">
                                        jbcarreon123.nekoweb.org
                                    </span>

                                    <span
                                        style="position:relative!important"
                                        class="noreset follow"
                                        title="Follow">[+]</span
                                    >
                                </p>
                                <span
                                    class="noreset"
                                    style="position:relative!important"
                                    id="NOTUSEDINNEKOWEB_sitetitle"
                                    >site title</span
                                >
                                <br />
                            </a>
                            <span class="noreset bottom-dot"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div id="nb-postbox">
                <div class="pre-pre-post noreset">
                    <div class="pre-post noreset" style="">
                        <a
                            href="/"
                            class="noreset post-link"
                            target="_blank"
                            id="NOTUSEDINNEKOWEB_posturl"
                            rel="noopener ugc"
                            style="position:relative!important"
                        >
                            <div
                                id="noreset post-jbcarreon123-test"
                                class="noreset post-box t-classic"
                                style="width:100%!important;max-height:400px!important;position:relative!important"
                            >
                                <div class="noreset post-box-inner">
                                    <span class="noreset post-top-dot"></span>
                                    <span
                                        class="noreset post-author"
                                        style="position:relative!important"
                                        id="NOTUSEDINNEKOWEB_siteusername"
                                        >jbcarreon123</span
                                    >
                                    <span
                                        class="noreset post-dot"
                                        style="position:relative!important"
                                        >·</span
                                    >
                                    <span
                                        class="noreset post-date"
                                        style="position:relative!important"
                                        id="NOTUSEDINNEKOWEB_feeddate"
                                        >5/2/2025</span
                                    >
                                    <h4
                                        class="noreset post-title"
                                        style="position:relative!important"
                                        id="NOTUSEDINNEKOWEB_feedtitle"
                                    >
                                        Example post
                                    </h4>

                                    <p
                                        class="noreset post-description"
                                        style="position:relative!important"
                                        id="NOTUSEDINNEKOWEB_feeddesc"
                                    >
                                        We're starting to formalize flexible
                                        opinions around our foundations at the
                                        end of the day highlights, and locked
                                        and loaded, but organic growth hammer
                                        out have bandwidth. The horse is out of
                                        the barn how much bandwidth do you have
                                        highlights. Corporate synergy we've
                                        bootstrapped the model.
                                    </p>

                                    <span class="noreset post-bottom-dot"
                                    ></span>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
            <div id="nb-errors" style="flex-direction: column;">
                <div>
                    <p>No errors found for now.</p>
                </div>
                <form
                    action="https://jigsaw.w3.org/css-validator/validator"
                    enctype="multipart/form-data"
                    method="post"
                    target="_blank"
                >
                    <p>
                        Unfortunately due to technical limitations, Nekobox
                        can't validate your CSS. But, you can press the button
                        below and it will check your CSS using W3C's CSS
                        validator:
                    </p>
                    <textarea
                        name="text"
                        id="nb-validate-textarea"
                        style="display: none;"></textarea>
                    <input type="hidden" name="lang" value="en" />
                    <input type="hidden" name="profile" value="css3" />

                    <button type="submit"
                        >Validate your CSS <span
                            aria-hidden="true"
                            class="ms"
                            data-icon="open_in_new"></span></button
                    >
                </form>
            </div>
            <div id="nb-options">
                <form class="nb-form">
                    <div>
                        <input type="checkbox" id="overflow" checked="false" />
                        <label for="overflow"
                            >Allow overflowing? (do you have Nekoweb Supporter)</label
                        >
                    </div>
                    <div>
                        <input type="checkbox" id="readonly" checked="false" />
                        <label for="readonly"
                            >Export as read-only? This will never get disabled
                            if enabled when exporting. Note that this isn't
                            bulletproof as a user can copy paste it they really
                            really wants to copy your elements.css.</label
                        >
                    </div>
                    <div>
                        <label for="username"
                            >Nekoweb Username ([username].nekoweb.org)</label
                        ><br />
                        <input type="text" id="username" value="jbcarreon123" />
                    </div>
                    <div>
                        <label for="domain"
                            >Site Domain (only necessary if you have a custom
                            domain)</label
                        ><br />
                        <input type="text" id="domain" />
                    </div>
                    <div>
                        <label for="rss"
                            >RSS feed path? If this is blank or if Nekobox can't
                            load the path, it will use the default one.</label
                        ><br />
                        <input type="text" id="rss" />
                    </div>
                    <div>
                        <label for="rsspost"
                            >Post to show? (Note that this won't be saved.)</label
                        ><br />
                        <select id="rsspost">
                            <option value="-1">No posts to show</option>
                        </select>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div>
        <p id="nkb-readonly" style="display: none;">
            This elements.css is read-only. To undo this, load another
            elements.css.
        </p>
        <div class="btn-cnt">
            <div>
                <button id="copy">Copy</button>
                <button id="copyMin">Copy (minified)</button>
                <button id="load">Load</button>
            </div>
            <p id="cssSize">0KB used</p>
        </div>
        <div id="nekobox-editor"></div>
    </div>

    <style is:inline>
        .mg {
            margin-bottom: 12px;
        }

        .btn-cnt {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: end;

            p {
                text-align: end;
                margin-bottom: 0;
            }
        }

        form {
            width: 100%;

            div {
                padding: 3px 0;
            }
        }

        #nekobox-tab-container {
            display: flex;
            flex-direction: column;
            background: var(--acc);
            padding: 6px;
            margin-bottom: 12px;
        }

        #tab-buttons {
            display: flex;
            flex-direction: row;
            gap: 6px;

            button {
                border: none;

                &.active {
                    background: var(--altbg);
                }
            }
        }

        button[data-target="nb-errors"] {
            margin-left: auto;
        }

        #nb-errors p {
            width: 100%;
        }

        #nekobox-tabs {
            background: var(--altbg);
            padding: 6px;

            & > * {
                display: none;

                &.visible {
                    display: flex;
                    justify-content: center;
                }

                * {
                    box-sizing: border-box;
                }
            }

            #nb-sitebox,
            #nb-postbox {
                background: #fff9e6;
            }

            &:has(input[type="checkbox"]#overflow:checked) #nb-sitebox,
            &:has(input[type="checkbox"]#overflow:checked) #nb-postbox {
                padding-block: 64px;
            }

            &:not(:has(input[type="checkbox"]#overflow:checked))
                #nb-sitebox
                .pre-site,
            &:not(:has(input[type="checkbox"]#overflow:checked))
                #nb-postbox
                .pre-post {
                outline: 3px dashed red;
            }
        }

        .pre-pre-site {
            font:
                11pt "MS PGothic",
                Tahoma,
                Verdana;
            margin: 10px;
            vertical-align: middle;
            display: inline-block !important;
            width: 280px;
            height: 197px !important;
        }

        .pre-site {
            position: relative;
            display: inline-block !important;
            width: 280px !important;
            height: 195px !important;

            @media only screen and (max-width: 800px) {
                h2,
                p,
                td {
                    margin: 0 12px;
                }
            }
        }

        .follow {
            cursor: pointer;
            font-size: 12px;
        }

        .pre-site a {
            text-decoration: none;
            color: var(--darkbrown);
        }

        .pre-site p {
            color: var(--darkbrown);
            font-weight: bold;
            display: block;
            margin-top: 1px;
            margin-bottom: 2px;
            font-size: 16px;
            overflow-wrap: break-word;
        }

        #NOTUSEDINNEKOWEB_siteurl,
        #NOTUSEDINNEKOWEB_siteusername {
            overflow-wrap: normal;
        }

        .sitefeature {
            margin-top: 13px;
            margin-left: 15px;
            height: 137px;
            width: 244px;
            background-image: url("/static/assets/previewplaceholder.png");
            background-color: white;
            border: 1px solid #ecbfa6;
        }

        .screenshot {
            width: 100%;
            height: 100%;
        }

        .site-box {
            text-align: center;
            background-image: url("/static/assets/cookiebox.png");
            background-repeat: no-repeat;
            width: 228px;
            height: 160px;
            display: inline-block;
            position: relative;
            margin: 4px;
            color: #b08271;
            font-size: 12px;
        }

        .post-link {
            text-decoration: none;
        }

        .post-box {
            background-color: #fff2cc;
            border: 4px solid #ecbfa6;
            padding: 15px;
            border-radius: 5px;
            color: #634c53;
            font-weight: normal;
        }

        .post-title {
            font-size: 18px;
            font-weight: bold;
            margin-top: 10px;
            margin-bottom: 0px;
        }

        .nekoweb-colors {
            --almostwhite: #fff2cc;
            --cream: #fff2cc;
            --orange: #ffc09b;
            --peach: #ffbbba;
            --lightgreen: #ffe1b6;
            --peachier: #ffbbba;
            --orangish: #ffc09b;
            --creamish: #ffecd6;
            --pink: #fc949f;
            --link: #ea8988;
            --purple: #fc949f;
            --palegreen: #bbd8bb;
            --gray: #d5d5d5;
            --lightbrown: #825044;
            --darkbrown: #634c53;
            --cookie: #875f6b;
            --dough: #ffd0bc;
            --light-red: #b95c5c;
            --crazy-green: #95e995;
            --gradientorange: linear-gradient(#fff2df, #fadabe);
        }

        .pre-pre-post {
            font:
                11pt "MS PGothic",
                Tahoma,
                Verdana;
            padding: 10px;
            vertical-align: middle;
            display: inline-grid !important;
            width: 100% !important;
            max-height: 400px !important;
            box-sizing: border-box;

            .pre-post {
                position: relative;
                display: inline-block !important;
                width: 100% !important;
                max-height: 400px !important;
                box-sizing: border-box;
            }

            *:hover {
                text-decoration: none;
            }

            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                font-family: serif;
                font-style: italic;
            }
        }

        .post-link {
            text-decoration: none;
        }

        .post-box {
            background-color: #fff2cc;
            border: 4px solid #ecbfa6;
            padding: 15px;
            border-radius: 5px;
            color: #634c53;
            font-weight: normal;
        }

        .post-title {
            font-size: 18px;
            font-weight: bold;
            margin-top: 10px;
            margin-bottom: 0px;
        }
    </style>

    <style is:inline id="user-style">
        /* 
            Don't use this file to edit your site style! Create a different CSS file for that.
            This file defines how custom elements (like sitebox) will look like.
            Setting CSS that breaks main nekoweb site on purpose is prohibited and may result in ban and site deletion! 
        */

        /* Must start with ".site-box". Change how your website will appear on main nekoweb site: https://lune.dimden.dev/405a44b7e5.png */
        .site-box {
            text-align: center;
            background-image: url(/static/assets/cookiebox.png); /* Only nekoweb URLs allowed, use full url to your site like https://example.nekoweb.org/images/coolbg.png */
            background-repeat: no-repeat;
            color: #b08271;
            font-size: 12px;
        }
        .site-box > a > p {
            color: var(--darkbrown);
            font-weight: bold;
        }
        .site-box > a > span {
            color: var(--darkbrown);
        }

        /* Style for your post box (must start with ".post-box") */
        .post-box {
            background-color: #fff2cc;
            border: 4px solid #ecbfa6;
            padding: 15px;
            border-radius: 5px;
            color: #634c53;
            font-weight: normal;
        }

        .post-box .post-title {
            font-size: 18px;
            font-weight: bold;
            margin-top: 10px;
            margin-bottom: 0px;
        }
    </style>
</Layout>
