---
import Buttons from '../../public/buttons.json';
import { Image } from 'astro:assets';

let buttons = Buttons
    .filter((btn) => !btn.imgUrl.startsWith('/imgs'))
    .map((btn) => {
        let url = new URL(btn.imgUrl)
        let spl = url.pathname.split('/')
        let ext = spl[spl.length - 1]
        let nme = url.hostname.replace('www', '').split('.')[0]

        return { 
            ...btn,
            slug: `/imgs/site-buttons/${nme}-${ext}/`
        }
    });

let nonbtns = Buttons
    .filter((btn) => btn.imgUrl.startsWith('/imgs'))
	.map((btn) => ({
		...btn,
		slug: btn.imgUrl
	}))

buttons = buttons.concat(nonbtns)
---

<script>
	import Freezeframe from 'freezeframe';

	let f = new Freezeframe('.btn-container .btn', {
		responsive: false,
		trigger: false
	});

	function toggleFreezeFrame() {
		f.toggle();
	}

	document.querySelector('button#toggle-btn')?.addEventListener('click', () => toggleFreezeFrame());
</script>

<button id="toggle-btn">Play/Pause Animated Buttons</button>

<div class="btn-container">
    {
        buttons.sort((a, b) => 
            a.alt.localeCompare(b.alt)
        ).map((btn) => <a href={btn.url}>
            <Image class="btn" src={btn.slug} alt={btn.alt} title={btn.title} width="88" height="31" />
        </a>)
    }
</div>

<style>
	button {
		width: fit-content;
	}

	img {
		position: relative;
		image-rendering: pixelated;
		z-index: 2;

		width: 88px;
		height: 31px;
		overflow: hidden;
	}

	a :global {
		.ff-loading-icon::before {
			background-image: none;
			content: "Loading";
			overflow: hidden;

			width: 88px;
			height: 31px;

			margin: 0 auto;
		}
	}

	img:hover {
		z-index: 5;
		transform: scale(1.25);
		filter: blur(0);
	}

	.btn-container:has(img:hover) img:not(:hover) {
		z-index: 1;
		opacity: 0.5;
		filter: blur(2px);
	}
</style>